{"remainingRequest":"/Users/apple/Documents/hub/gchub/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Documents/hub/gchub/src/components/TicketList.vue?vue&type=style&index=0&id=0a85620c&scoped=true&lang=css&","dependencies":[{"path":"/Users/apple/Documents/hub/gchub/src/components/TicketList.vue","mtime":1587998535893},{"path":"/Users/apple/Documents/hub/gchub/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Documents/hub/gchub/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/apple/Documents/hub/gchub/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/apple/Documents/hub/gchub/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/apple/Documents/hub/gchub/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Documents/hub/gchub/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi52LWRhdGEtdGFibGVfX3dyYXBwZXJ7CiAgYm9yZGVyOiAxcHggZ3JheSBzb2xpZDsKfQoudi1jYXJkX19hY3Rpb25zewogICAgcGFkZGluZzogMjBweDsKICAgIHBhZGRpbmctdG9wOiAwcHg7Cn0KLnYtY2FyZF9fYWN0aW9ucz4udi1idG57CiAgICB3aWR0aDogMTAwJTsKfQoudi1jYXJkIHsKICBtYXJnaW46IDMwcHggMHB4Owp9Ci52LWRhdGEtdGFibGV7CiAgcGFkZGluZzogMTZweDsKfQo="},{"version":3,"sources":["TicketList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TicketList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card>\n    <v-card-title >\n      <v-spacer></v-spacer>\n      <v-row justify=\"center\">\n        <v-dialog v-model=\"dialog\" persistent max-width=\"600px\">\n            <div class=\"v-sheet theme--light\">\n            <v-card-title>\n              <span class=\"headline\">UPDATE TICKET</span>\n              <v-spacer></v-spacer>\n              <v-btn color=\"black darken-1\" text @click=\"dialog = false\">X</v-btn>\n            </v-card-title>\n            <hr>\n            <v-card-text>\n              <v-container>\n                <p>Transaction Date: {{this.modalData.new_transaction_date}}</p>\n                <p>Transaction Amount: ${{this.modalData.amount_fiat}}</p>\n                <p>Wallet Address: {{this.modalData.address}}</p>\n                <p>Status: {{this.modalData.status}}</p>\n                <!-- <p>Crypto Transaction ID: {{this.modalData.transaction_id}}</p> -->\n\n                <p style=\"text-align: center;\">Additional Details</p>\n                <p>Please upload additional files if necessary</p>\n                <input type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"onChangeFileUpload()\" accept=\"image/*\" />\n              </v-container>\n            </v-card-text>\n            <v-card-actions>\n              <v-btn style=\"color: #fff;\" color=\"blue darken-1\" @click=\"updateTicket\">Submit</v-btn>\n            </v-card-actions>\n          </div>\n        </v-dialog>\n      </v-row>\n    </v-card-title>\n    <v-card-title>\n      <v-btn color=\"blue darken-1\" dark style=\"margin-right: 5px;\">Copy</v-btn>\n      <v-btn color=\"blue darken-1\" dark style=\"margin-right: 5px;\">PDF</v-btn>\n      <v-btn color=\"blue darken-1\" dark style=\"margin-right: 5px;\">Print</v-btn>\n      <v-spacer></v-spacer>\n      <v-text-field\n        v-model=\"search\"\n        append-icon=\"mdi-magnify\"\n        label=\"Search\"\n        single-line\n        hide-details\n      ></v-text-field>\n    </v-card-title>\n    <v-data-table\n      v-model=\"selected\"\n      :headers=\"headers\"\n      :items=\"items\"\n      :search=\"search\"\n    >\n    <template v-slot:item=\"row\">\n          <tr>\n            <td>{{row.item.new_transaction_date}}</td>\n            <td>\n                <v-btn style=\"color: blue;\" @click=\"handleClick(row.item)\">\n                  Add more details\n                </v-btn>\n            </td>\n            <td>{{row.item.amount_crypto}}</td>\n            <td>{{row.item.address}}</td>\n            <td>{{row.item.new_created_at}}</td>\n            <td>{{row.item.updates}}</td>\n            <td>{{row.item.status}}</td>\n          </tr>\n      </template>\n      <v-alert slot=\"no-results\" :value=\"true\" color=\"error\" icon=\"warning\">\n        Your search for \"{{ search }}\" found no results.\n      </v-alert>\n    </v-data-table>\n  </v-card>\n</template>\n\n<script>\n/* eslint-disable */\nimport transactionCreate from '@/components/TransactionCreate.vue'\nimport transactionDetail from '@/components/TransactionDetail.vue'\nimport Vue from 'vue'\nimport * as ticketAPI from '@/api/tickets'\nimport { currentUserID } from '@/api/user'\nimport VueNotifications from 'vue-notifications'\nimport miniToastr from 'mini-toastr'\n\nconst toastTypes = {\n  success: 'success',\n  error: 'error',\n  info: 'info',\n  warn: 'warn'\n}\n\nminiToastr.init({types: toastTypes})\n\nfunction toast ({title, message, type, timeout, cb}) {\n  return miniToastr[type](message, title, timeout, cb)\n}\n\nconst options = {\n  success: toast,\n  error: toast,\n  info: toast,\n  warn: toast\n}\n\nVue.use(VueNotifications, options)\n\nexport default {\n  data () {\n    return {\n      dialog:false,\n      selected:[],\n      search: '',\n      closeOnEscape: true,\n      headers: [\n        {\n          text: 'Date',\n          align: 'left',\n          sortable: false,\n          value: 'new_transaction_date'\n        },\n        { text: 'Update Report', value: 'update_link' },\n        { text: 'Transaction Amount', value: 'amount_crypto' },\n        { text: 'Bitcoin Wallet', value: 'address' },\n        { text: 'Date Submitted', value: 'new_created_at' },\n        { text: 'Updates', value: 'updates' },\n        { text: 'Status', value: 'status' }\n      ],\n      items: [],\n      modalData: {},\n      ticketData: {\n        user_id: currentUserID,\n        files: []\n      }\n    }\n  },\n  components: {\n    transactionCreate,\n    transactionDetail\n  },\n  mounted () {\n    this.loadTransactions()\n  },\n  methods: {\n    src: function(){\n      return this.url + \"&origin=\" + this.origin + \"&destination=\" + this.destination;\n    },\n    async loadTransactions () {\n      try {\n        const resp = await ticketAPI.list({\n          pageSize: 15\n        })\n        console.log(resp.data)\n        if (resp.data.data) {\n          this.items = resp.data.data\n          this.items.forEach(element => {\n\n            var date_str1 = (element.transaction_date).split('T');\n            var date_arr1 = date_str1[0].split('-');\n            var day = date_arr1[2];\n            var month = date_arr1[1];\n            var year = date_arr1[0];\n            element.new_transaction_date = month + '-' + day + '-' +year;\n\n            var date_str2 = (element.transaction_date).split('T');\n            var date_arr2 = date_str2[0].split('-');\n            var day = date_arr2[2];\n            var month = date_arr2[1];\n            var year = date_arr2[0];\n            element.new_created_at = month + '-' + day + '-' +year;\n\n            var date_str3 = (element.zendesk_ticket.updated_at).split('T');\n            var date_arr3 = date_str3[0].split('-');\n            var day = date_arr3[2];\n            var month = date_arr3[1];\n            var year = date_arr3[0];\n            // element.updates = month + '-' + day + '-' +year;\n            element.updates = element.zendesk_ticket.status\n            element.status = 'closed';\n          });\n        }\n      } catch (err) {\n        this.handleError(err)\n      }\n    },\n    viewTransaction (transaction) {\n      // console.log('viewing transaction', transaction.id)\n      this.$router.push({\n        name: ROUTE_NAME_TRANSACTION_DETAIL,\n        params: {\n          id: transaction.id\n        }\n      })\n    },\n    onChangeFileUpload () {\n      let data = {\n        filename: '',\n        data: '',\n        mimetype: ''\n      }\n      let files = this.$refs.file.files[0]\n      var reader = new FileReader()\n      var vm = this\n      reader.onload = (e) => {\n        data.filename = files.name\n        let base64 = e.target.result\n        data.data = base64.split(',')[1]\n        data.mimetype = files.type\n        vm.ticketData.files.push(data)\n      }\n      reader.readAsDataURL(files)\n    },\n    async updateTicket () {\n      try {\n        this.ticketData.id = this.modalData.id\n        this.ticketData.transaction_id = this.modalData.transaction_id\n        this.ticketData.transaction_date = new Date(this.modalData.new_transaction_date)\n        this.ticketData.amount_fiat = this.modalData.amount_fiat\n        this.ticketData.amount_crypto = this.modalData.amount_crypto\n        this.ticketData.address = this.modalData.address\n        this.ticketData.status = this.modalData.status\n        this.ticketData.atm_id = this.modalData.atm_id\n        this.ticketData.email = this.modalData.email\n        this.ticketData.phone = this.modalData.phone\n        this.ticketData.zendesk_id = this.modalData.zendesk_id\n        this.ticketData.zendesk_ticket = this.modalData.zendesk_ticket\n        console.log('post data: ', this.ticketData)\n        await ticketAPI.update(this.modalData.id, this.ticketData).then(response => {\n          console.log('Response is: ' + response)\n          this.dialog = false\n          this.showUpdateSuccess()\n        })\n          .catch(error => {\n            console.log(error)\n            this.showUpdateError({message: error})\n          })\n      } catch (err) {\n        this.handleError(err)\n        this.showUpdateError()\n      }\n    },\n    handleClick(value){\n      this.dialog = true;\n      this.modalData = value;\n      console.log('modal data: ', this.modalData)\n    }\n  },\n  notifications: {\n    showUpdateError: { // You can have any name you want instead of 'showLoginError'\n      title: 'Update Failed',\n      message: 'Please again!',\n      type: 'error' // You also can use 'VueNotifications.types.error' instead of 'error'\n    },\n    showUpdateSuccess : {\n      title: 'Success!',\n      message: 'Ticket updated successfully!',\n      type: 'success'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.v-data-table__wrapper{\n  border: 1px gray solid;\n}\n.v-card__actions{\n    padding: 20px;\n    padding-top: 0px;\n}\n.v-card__actions>.v-btn{\n    width: 100%;\n}\n.v-card {\n  margin: 30px 0px;\n}\n.v-data-table{\n  padding: 16px;\n}\n</style>\n"]}]}