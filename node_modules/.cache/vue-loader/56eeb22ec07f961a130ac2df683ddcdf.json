{"remainingRequest":"/Users/apple/Documents/hub/gchub/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Documents/hub/gchub/src/views/AuthCallback.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Documents/hub/gchub/src/views/AuthCallback.vue","mtime":1587998535898},{"path":"/Users/apple/Documents/hub/gchub/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Documents/hub/gchub/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/Documents/hub/gchub/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/apple/Documents/hub/gchub/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Documents/hub/gchub/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCB7IGh1YkFQSSB9IGZyb20gJ0AvYXBpL2NsaWVudCcKCmV4cG9ydCBjb25zdCBST1VURV9OQU1FID0gJ0F1dGhDYWxsYmFjaycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiBST1VURV9OQU1FLAogIGRhdGE6ICgpID0+ICh7fSksCiAgY29tcHV0ZWQ6IHsKICAgIGNvZGUgKCkgewogICAgICByZXR1cm4gdGhpcy4kcm91dGUucXVlcnkuY29kZQogICAgfSwKICAgIHNjb3BlICgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnF1ZXJ5LnNjb3BlCiAgICB9LAogICAgc3RhdGUgKCkgewogICAgICByZXR1cm4gdGhpcy4kcm91dGUucXVlcnkuc3RhdGUKICAgIH0KICB9LAoKICBtb3VudGVkICgpIHsKICAgIGh1YkFQSS5leGNoYW5nZUNvZGUodGhpcy5jb2RlLCB0aGlzLnN0YXRlKS50aGVuKHJlZGlyZWN0ID0+IHsKICAgICAgLy8gY29uc29sZS5sb2cocmVkaXJlY3QpCiAgICAgIGlmIChyZWRpcmVjdCkgewogICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IHJlZGlyZWN0CiAgICAgIH0KICAgIH0pCiAgfQp9Cg=="},{"version":3,"sources":["AuthCallback.vue"],"names":[],"mappings":";;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AuthCallback.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <h3>You are being redirected</h3>\n</template>\n\n<script>\nimport { hubAPI } from '@/api/client'\n\nexport const ROUTE_NAME = 'AuthCallback'\n\nexport default {\n  name: ROUTE_NAME,\n  data: () => ({}),\n  computed: {\n    code () {\n      return this.$route.query.code\n    },\n    scope () {\n      return this.$route.query.scope\n    },\n    state () {\n      return this.$route.query.state\n    }\n  },\n\n  mounted () {\n    hubAPI.exchangeCode(this.code, this.state).then(redirect => {\n      // console.log(redirect)\n      if (redirect) {\n        window.location = redirect\n      }\n    })\n  }\n}\n</script>\n"]}]}