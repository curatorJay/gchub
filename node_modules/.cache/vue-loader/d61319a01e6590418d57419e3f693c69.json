{"remainingRequest":"/Users/apple/Documents/hub/gchub/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Documents/hub/gchub/src/views/Transactions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Documents/hub/gchub/src/views/Transactions.vue","mtime":1587998535900},{"path":"/Users/apple/Documents/hub/gchub/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Documents/hub/gchub/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/Documents/hub/gchub/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/apple/Documents/hub/gchub/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Documents/hub/gchub/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Transactions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Transactions.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-card>\n    <v-card-title>\n      Your recent transactions\n      <v-spacer></v-spacer>\n      <v-row justify=\"center\">\n        <v-dialog v-model=\"dialog\" persistent max-width=\"700px\">\n          <div class=\"v-sheet theme--light\">\n            <v-card-title>\n              <span class=\"headline\">Transactions Detail</span>\n              <v-spacer></v-spacer>\n              <v-btn color=\"black darken-1\" text @click=\"dialog = false\">X</v-btn>\n            </v-card-title>\n            <hr />\n            <v-card-text>\n              <v-container>\n                <iframe style=\"width: 100%; height:230px\" v-bind:src=\"src()\" name=\"Getcoins Bitcoin ATM\" frameborder=\"0\" scrolling=\"yes\" marginheight=\"0\" marginwidth=\"0\"></iframe>\n                <p>Transaction Date: {{modalData.date}}</p>\n                <p>Amount in {{modalData.currency_fiat}}: $ {{modalData.amount_fiat}}</p>\n                <p>Amount in Crypto: {{modalData.amount_fiat/100000}}{{modalData.currency_crypto}}</p>\n\n                <p style=\"text-align: center; font-size: 20px;\">\n                  <b>Additional Details</b>\n                </p>\n                <p>Address: <a v-bind:href=\"url+modalData.address\" target=\"_black\"><label style=\"color:blue\">{{modalData.address}}</label></a></p>\n                <p>Transaction Type: {{modalData.type}}</p>\n                <p>Transaction Crypto: {{modalData.currency_crypto}}</p>\n                <p>{{modalData.currency_crypto}} Transaction id: <a v-bind:href=\"'https://live.blockcypher.com/btc/tx/'+modalData.txid\" target=\"_black\"><label style=\"color:blue\">{{modalData.txid}}</label></a></p>\n                <p>ATM Transaction ID: <strong>{{modalData.shortcode}}</strong></p>\n                <p>ATM Status: {{modalData.status}}</p>\n                <p>Blockchain Status: COMPLETED</p>\n                <p\n                  style=\"text-align: center; font-size: 17px; font-color: blue\"\n                  @click=\"openReport()\"\n                >\n                  <a>Report this transaction</a>\n                </p>\n              </v-container>\n            </v-card-text>\n          </div>\n        </v-dialog>\n      </v-row>\n      <v-spacer></v-spacer>\n      <v-row justify=\"center\">\n        <v-dialog v-model=\"reportDialog\" persistent max-width=\"600px\">\n          <div class=\"v-sheet theme--light\">\n            <v-card-title>\n              <span class=\"headline\">Report a Transaction</span>\n              <v-spacer></v-spacer>\n              <v-btn color=\"black darken-1\" text @click=\"reportDialog = false\">X</v-btn>\n            </v-card-title>\n            <v-card-text>\n              <v-container>\n                <form @submit.prevent=\"saveTransaction\" enctype=\"multipart/form-data\">\n                  <v-text-field label=\"Transactions Date\" required v-bind:value=\"modalData.date\"></v-text-field>\n                  <v-text-field\n                    label=\"Transactions Amount($)\"\n                    required\n                    v-bind:value=\"modalData.amount_fiat\"\n                  ></v-text-field>\n                  <v-text-field\n                    label=\"Amount in Crypto\"\n                    required\n                    v-bind:value=\"modalData.amount_crypto\"\n                  ></v-text-field>\n                  <v-text-field label=\"Transaction Status\" required value=\"COMPLETE\"></v-text-field>\n                  <v-text-field\n                    label=\"Crypto Wallet Address\"\n                    required\n                    v-bind:value=\"modalData.address\"\n                  ></v-text-field>\n                  <v-text-field label=\"Explain info about the Scam\" required v-model=\"transactionData.info\"></v-text-field>\n                  <v-text-field label=\"Email Address\" required v-model=\"transactionData.email\"></v-text-field>\n                  <v-text-field label=\"Phone Number\" required v-model=\"transactionData.phone\"></v-text-field>\n                  <p>Kindly upload your photo ID, police report, and any other releated info to the scam</p>\n                  <input type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"onChangeFileUpload()\" accept=\"image/*\" />\n                </form>\n              </v-container>\n            </v-card-text>\n            <v-card-actions>\n              <v-btn color=\"blue darken-1\" @click=\"saveTransaction\">Submit</v-btn>\n            </v-card-actions>\n          </div>\n        </v-dialog>\n      </v-row>\n    </v-card-title>\n    <v-card-title>\n      <v-btn color=\"blue darken-1\" dark style=\"margin-right: 5px;\" @click=\"doCopy\">Copy</v-btn>\n      <v-btn color=\"blue darken-1\" dark style=\"margin-right: 5px;\" @click=\"exportPDF\">PDF</v-btn>\n      <v-btn color=\"blue darken-1\" dark style=\"margin-right: 5px;\" @click=\"printWindow\">Print</v-btn>\n      <v-spacer></v-spacer>\n      <v-text-field\n        v-model=\"search\"\n        append-icon=\"mdi-magnify\"\n        label=\"Search\"\n        single-line\n        hide-details\n      ></v-text-field>\n    </v-card-title>\n    <transaction-list :search=\"search\" @click:row=\"viewTransaction\" ref=\"datatable\"/>\n  </v-card>\n</template>\n\n<script>\nimport TransactionList from '@/components/TransactionList'\nimport { ROUTE_NAME as ROUTE_NAME_TICKET } from '@/views/Tickets'\n// import * as transactionAPI from '@/api/transactions'\nimport * as ticketAPI from '@/api/tickets'\nimport * as JsPDF from 'jspdf'\nimport 'jspdf-autotable'\nimport VueClipboard from 'vue-clipboard2'\nimport Vue from 'vue'\nimport * as getAmtAddress from '@/api/getAmtAddress'\nimport { currentUserID } from '@/api/user'\n\nimport VueNotifications from 'vue-notifications'\nimport miniToastr from 'mini-toastr'\n\nconst toastTypes = {\n  success: 'success',\n  error: 'error',\n  info: 'info',\n  warn: 'warn'\n}\n\nminiToastr.init({ types: toastTypes })\n\nfunction toast ({ title, message, type, timeout, cb }) {\n  return miniToastr[type](message, title, timeout, cb)\n}\n\nconst options = {\n  success: toast,\n  error: toast,\n  info: toast,\n  warn: toast\n}\n\nVue.use(VueNotifications, options)\n\nVueClipboard.config.autoSetContainer = true\nVue.use(VueClipboard)\n\nexport const ROUTE_NAME = 'Transactions'\nconst googleMapAPIKey = 'AIzaSyCN55Eaaol4NW22SiO752Nb8LB22nPn4ok'\n\nexport default {\n  name: ROUTE_NAME,\n  components: {\n    TransactionList\n  },\n  data () {\n    return {\n      search: '',\n      dialog: false,\n      reportDialog: false,\n      origin: 'marylad',\n      destination: 'detroit',\n      modalData: {},\n      Key: googleMapAPIKey,\n      address: 'Hong Kong',\n      url:\n        'https://live.blockcypher.com/btc/address/',\n      map_url:\n        'https://www.google.com/maps/embed/v1/place',\n      locations: [],\n      select_location: {},\n      latitude: 39.84733,\n      longitude: -86.13057,\n      name: 'Sunoco Gas Station',\n      transactionData: {\n        user_id: currentUserID,\n        files: []\n        // {\n        //   filename: '',\n        //   data: '',\n        //   mimetype: ''\n        // }\n      }\n    }\n  },\n  mounted () {\n    this.getAtmAddress()\n  },\n  methods: {\n    async getAtmAddress () {\n      try {\n        const resp = await getAmtAddress.getAmtAddress()\n        if (resp) {\n          this.locations = resp.data.locations\n        }\n      } catch (err) {\n        this.handleError(err)\n      }\n    },\n    openReport () {\n      this.dialog = false\n      this.reportDialog = true\n    },\n    src: function () {\n      return (\n        this.map_url + '?key=' + this.Key + '&q=' + this.latitude + ',' + this.longitude + ',' + this.name + '&zoom=14'\n      )\n    },\n    viewTransaction (value) {\n      this.dialog = true\n      this.modalData = value\n      this.select_location = this.locations.filter((item) => {\n        let kiock = value.kiosk_id ? value.kiosk_id : value.external_network_kiosk_id\n        return item.kiosk_id === kiock\n      })\n      if (this.select_location[0]) {\n        console.log('select location: ', this.select_location[0])\n        this.latitude = this.select_location[0].lat\n        this.longitude = this.select_location[0].lng\n        this.name = this.select_location[0].name\n      }\n    },\n    exportPDF () {\n      var columns = [\n        { title: 'Transaction Date', dataKey: 'date' },\n        { title: 'Amount', dataKey: 'amount_fiat' },\n        { title: 'Transaction Type', dataKey: 'type' },\n        { title: 'CryptoCurrency', dataKey: 'currency_crypto' },\n        { title: 'ATM Status', dataKey: 'status' },\n        { title: 'Blockchain Status', dataKey: 'confirmations' }\n      ]\n      var doc = new JsPDF('p', 'pt')\n      doc.text('Transaction List', 40, 40)\n      doc.autoTable(columns, this.$refs.datatable.items, {\n        margin: { top: 60 }\n      })\n      doc.save('transaction.pdf')\n    },\n    doCopy () {\n      var table = document.getElementById('transaction_list_table').firstElementChild.innerHTML\n      var html = `!DOCTYPE html>\n        <html>\n          <head>\n          </head>\n          <body>\n            <div style=\"width: 90%; margin:auto; text-align: center;\">\n            ${table}\n            </div>\n          </body>\n        </html>`\n      this.$copyText(html).then(function (e) {\n        alert('Copied')\n      }, function (e) {\n        alert('Can not copy')\n      })\n    },\n    printWindow () {\n      var prtHtml = document.getElementById('transaction_list_table').firstElementChild.innerHTML\n      const WinPrint = window.open('', '', 'left=500,top=20,width=800,height=800,toolbar=10,scrollbars=0,status=0')\n      WinPrint.document.write(`<!DOCTYPE html>\n        <html>\n          <head>            \n          </head>\n          <body>\n            <div style=\"width: 90%; margin:auto; text-align: center;\">\n            ${prtHtml}\n            </div>\n          </body>\n        </html>`)\n\n      WinPrint.document.close()\n      WinPrint.focus()\n      WinPrint.print()\n      WinPrint.close()\n    },\n    onChangeFileUpload () {\n      let data = {\n        filename: '',\n        data: '',\n        mimetype: ''\n      }\n      let files = this.$refs.file.files[0]\n      var reader = new FileReader()\n      var vm = this\n      reader.onload = (e) => {\n        data.filename = files.name\n        let base64 = e.target.result\n        data.data = base64.split(',')[1]\n        data.mimetype = files.type\n        vm.transactionData.files.push(data)\n      }\n      reader.readAsDataURL(files)\n    },\n    async saveTransaction () {\n      try {\n        this.transactionData.transaction_id = this.modalData.txid\n        this.transactionData.transaction_date = new Date(this.modalData.date)\n        this.transactionData.amount_fiat = parseInt(this.modalData.amount_fiat)\n        this.transactionData.amount_crypto = parseFloat(this.modalData.amount_crypto)\n        this.transactionData.address = this.modalData.address\n        this.transactionData.status = this.modalData.status\n        this.transactionData.atm_id = parseInt(this.modalData.source_id)\n        await ticketAPI.create(this.transactionData).then(response => {\n          console.log('Response is: ' + response)\n          this.dialog = false\n          this.showCreateSuccess()\n          this.$router.push({\n            name: ROUTE_NAME_TICKET\n          })\n        })\n          .catch(error => {\n            console.log(error)\n            this.showCreateError({ message: error })\n          })\n      } catch (err) {\n        this.handleError(err)\n        this.showCreateError()\n      }\n    }\n  },\n  notifications: {\n    showCreateError: { // You can have any name you want instead of 'showLoginError'\n      title: 'Error',\n      message: 'Transaction create failed. Please again!',\n      type: 'error' // You also can use 'VueNotifications.types.error' instead of 'error'\n    },\n    showCreateSuccess: {\n      title: 'Success',\n      message: 'Transaction created successfully!',\n      type: 'success'\n    }\n  }\n}\n</script>\n"]}]}